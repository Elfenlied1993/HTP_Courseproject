@using Course.ITnews.Domain.Contracts.ViewModels
@using Markdig
@model Course.ITnews.Domain.Contracts.ViewModels.NewsViewModel

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<div>
    <h4>News</h4>
    <hr />
    <input asp-for="Id" type="hidden" id="newsId" />

    <dl class="row">

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FullDescription)
        </dt>
        <dd class="col-sm-10">
            @Html.Raw(Markdown.ToHtml(ViewData.Model.FullDescription, null))
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Author)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Category)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TagsTitles)
        </dt>
        <dd class="col-sm-10">
            @{
                foreach (var title in ViewData.Model.TagsTitles)
                {
                    <span class="badge badge-primary">
                        @title
                    </span>
                }
            }
        </dd>
    </dl>

    <div class="d-flex">
        <input id="input-2" name="input-2" value="@Model.AverageRating" change="postRating" class="rating rating-loading" data-ajax="true" data-ajax-method="post" data-ajax-complete="postRating" data-step="1" />
        <span class="mt-3 pl-2">@Model.Ratings.Count() users rated</span>
    </div>
</div>
@if (User.Identity.IsAuthenticated)
{
    <div class="input-group mb-3">
        <input type="hidden" id="authorId" value="@Html.ViewData.Model.NewComment.AuthorId" />
        <input type="hidden" id="userInput" value="@Html.ViewData.Model.NewComment.AuthorName" />
        <input type="text" id="messageInput" class="form-control" placeholder="Write your message" aria-label="Write your message" aria-describedby="button-addon2">
        <div class="input-group-append">
            <button class="btn btn-primary" type="button" id="sendButton" value="Send">Send</button>
        </div>
    </div>
    <input value="@ViewData["LastId"]" type="hidden" id="commentId">
}
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-star-rating/4.0.6/css/star-rating.min.css" media="all" rel="stylesheet" type="text/css" />
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-star-rating/4.0.6/js/star-rating.min.js" type="text/javascript"></script>
<script src="https://kit.fontawesome.com/20106ccf7e.js"></script>
<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
<script src="~/js/jquery.unobtrusive-ajax.js"></script>
<script src="~/js/commentary.js"></script>

<script>

    var connection = new signalR.HubConnectionBuilder().withUrl("/ratingHub").build();
    connection.start().then(function () { }).catch(function (err) {
        return console.error(err.toString());
    });
    $("#input-2").rating();
    $('#input-2').on('rating:change', postRating);
    function postRating(event, value, caption) {
        sendRating(event);
    }
    function sendRating(event) {
        var ratingNumber = document.getElementById("input-2").value;
        var authorId = document.getElementById("authorId").value;
        var newsId = document.getElementById("newsId").value;
        connection.invoke("SendRating", ratingNumber, authorId, newsId).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();

    };
</script>
@if (User.Identity.IsAuthenticated)
{
    <div id="comments">
        @foreach (var item in Model.Commentaries)
        {

            if (item.Description != null)
            {
                <a>
                    <div class="card-header">@Html.DisplayFor(modelItem => item.AuthorName) says:</div>
                    <div class="card">@Html.DisplayFor(modelItem => item.Description)</div>
                    <form id="form-@item.Id" asp-action="DeleteComment" asp-route-id="@item.Id" data-ajax="true" data-ajax-success="deleteItem(this)">
                        <button type="submit" class="btn btn-sm btn-danger d-none d-md-inline-block" onclick="removeButton(@item.Id)">
                            Delete
                        </button>
                    </form>
                    <button type="button" class="like-button" title="Click to like" id="like-@item.Id" onclick="likeButton(@ViewData.Model.NewComment.AuthorId, @item.Id)">
                        <i class="fa fa-thumbs-up"></i>
                        <span class="like-count" id="count-@item.Id">@item.Likes.Count</span>
                    </button>
                </a>
            }
        }
    </div>
}
<div>
    <a asp-action="Index">Back to List</a>
</div>
